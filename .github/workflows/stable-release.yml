name: Publish Docker latest and version tagged image
# This should only run when a release is created with a version tag
on:
    workflow_dispatch:

jobs:
    SemanticRelease:
        if: github.ref_name == github.event.repository.default_branch
        runs-on: ubuntu-latest
        permissions:
            contents: write # to be able to publish a GitHub release
            issues: write # to be able to comment on released issues
            pull-requests: write # to be able to comment on released pull requests
        steps:
            -   name: Checkout source code
                uses: actions/checkout@v4
                with:
                    token: ${{ secrets.GH_TOKEN }}
                    fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
            # This is required to be able to run semantic-release
            -   name: Setup Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: 21
            # This is required to be able to run semantic-release plugins
            -   name: Client App Install
                uses: ./.github/workflows/steps/client-app-install/
            -   name: GitHub Release
                run: npx --prefix src/WebAPI/ClientApp/ semantic-release
                id: get-next-version
                env:
                    GH_TOKEN: ${{ secrets.GH_TOKEN }}
                    GIT_AUTHOR_NAME: ${{ vars.GIT_AUTHOR_NAME }}
                    GIT_AUTHOR_EMAIL: ${{ vars.GIT_AUTHOR_EMAIL }}
                    GIT_COMMITTER_NAME: ${{ vars.GIT_COMMITTER_NAME }}
                    GIT_COMMITTER_EMAIL: ${{ vars.GIT_COMMITTER_EMAIL }}
        outputs:
            new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
            new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}
    
    # Build Docker Image
    CreateDockerLatestAndTagRelease:
        if: needs.get-next-version.outputs.new-release-published == 'true'
        needs: [ SemanticRelease ]
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   run: echo "The new release version is v${{ needs.get-next-version.outputs.new-release-version }}"
            -   name: Publish to Docker with latest and version tag
                uses: elgohr/Publish-Docker-Github-Action@v5
                env:
                    # This is the version that was released by semantic-release, see .releaserc.json
                    VERSION: v${{ needs.get-next-version.outputs.new-release-version }}
                with:
                    name: plexripper/plexripper
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}
                    buildargs: VERSION
                    tags: "latest,${{ env.VERSION }}"
                    default_branch: dev
